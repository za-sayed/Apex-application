create or replace PROCEDURE getEventStatus(Eventid NUMBER)
IS
CURSOR cur_event IS
SELECT e.EVENT_NAME, e.EVENT_TYPE, e.DESCRIPTION, e.START_DATE, e.END_DATE, e.BUDGET,
e.VENUE_COST, e.VENUE_PAYMENT_STATUS, o.NAME AS ORGANIZER_NAME, o.EMAIL AS ORGANIZER_EMAIL, 
o.PHONE_NUMBER AS ORGANIZER_PHONENUMBER, v.VENUE_NAME, v.CAPACITY, v.LOCATION, v.FACILITIES
FROM EVENTS e, ORGANIZERS o, VENUES v
WHERE e.ORGANIZER_ID = o.ORGANIZER_ID and e.VENUE_ID = v.VENUE_ID and e.EVENT_ID = Eventid;
event_record cur_event%ROWTYPE;
BEGIN
OPEN cur_event;
FETCH cur_event INTO event_record;
IF cur_event%NOTFOUND THEN
    DBMS_OUTPUT.PUT_LINE('WRONG EVENT ID');
ELSE
    DBMS_OUTPUT.PUT_LINE('EVENT NAME: ' || event_record.EVENT_NAME);
    DBMS_OUTPUT.PUT_LINE('EVENT TYPE: ' || event_record.EVENT_TYPE);
    DBMS_OUTPUT.PUT_LINE('EVENT DESCRIPTION: ' || event_record.DESCRIPTION);
    DBMS_OUTPUT.PUT_LINE('START DATE: ' || event_record.START_DATE);
    DBMS_OUTPUT.PUT_LINE('END DATE: ' || event_record.END_DATE);
    DBMS_OUTPUT.PUT_LINE('BUDGET: ' || event_record.BUDGET);
    DBMS_OUTPUT.PUT_LINE('VENUE COST: ' || event_record.VENUE_COST);
    DBMS_OUTPUT.PUT_LINE('VENUE PAYMENT STATUS: ' || event_record.VENUE_PAYMENT_STATUS);
    DBMS_OUTPUT.PUT_LINE('ORGANIZER NAME: ' || event_record.ORGANIZER_NAME);
    DBMS_OUTPUT.PUT_LINE('ORGANIZER EMAIL: ' || event_record.ORGANIZER_EMAIL);
    DBMS_OUTPUT.PUT_LINE('ORGANIZER PHONE NUMBER: ' || event_record.ORGANIZER_PHONENUMBER);
    DBMS_OUTPUT.PUT_LINE('VENUE NAME: ' || event_record.VENUE_NAME);
    DBMS_OUTPUT.PUT_LINE('VENUE CAPACITY: ' || event_record.CAPACITY);
    DBMS_OUTPUT.PUT_LINE('VENUE LOCATION: ' || event_record.LOCATION);
    DBMS_OUTPUT.PUT_LINE('VENUE FACILITIES: ' || event_record.FACILITIES);
END IF;
CLOSE cur_event;
END;
/