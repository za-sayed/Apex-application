CREATE TABLE Organizers (
    organizer_id NUMBER PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL UNIQUE,
    phone_number VARCHAR2(20) NOT NULL
);

CREATE TABLE Venues (
    venue_id NUMBER PRIMARY KEY,
    venue_name VARCHAR2(255) NOT NULL,
    capacity NUMBER NOT NULL,
    location VARCHAR2(255),
    facilities VARCHAR2(1000)
);

CREATE TABLE Vendors (
    vendor_id NUMBER PRIMARY KEY,
    vendor_name VARCHAR2(255) NOT NULL,
    service_type VARCHAR2(50),
    contact_details VARCHAR2(255)
);

CREATE TABLE Events (
    event_id NUMBER PRIMARY KEY,
    event_name VARCHAR2(255) NOT NULL,
    event_type VARCHAR2(50),
    description VARCHAR2(1000),
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    organizer_id NUMBER,
    venue_id NUMBER,
    budget NUMBER,
    venue_cost NUMBER,
    venue_payment_status VARCHAR2(20),
    FOREIGN KEY (organizer_id) REFERENCES Organizers(organizer_id),
    FOREIGN KEY (venue_id) REFERENCES Venues(venue_id)
);

CREATE TABLE Participants (
    participant_id NUMBER PRIMARY KEY,
    name VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL,
    phone_number VARCHAR2(20),
    event_id NUMBER NOT NULL,
    payment_status VARCHAR2(20) CHECK (payment_status IN ('Paid', 'Pending')),
    category VARCHAR(50),
    FOREIGN KEY (event_id) REFERENCES Events(event_id)
);

CREATE TABLE Payments (
    payment_id NUMBER PRIMARY KEY,
    participant_id NUMBER,
    event_id NUMBER,
    amount NUMBER(10, 2) NOT NULL,
    payment_date DATE DEFAULT SYSDATE,
    FOREIGN KEY (participant_id) REFERENCES Participants(participant_id),
    FOREIGN KEY (event_id) REFERENCES Events(event_id)
);

CREATE TABLE Staff (
    staff_id NUMBER PRIMARY KEY,
    staff_name VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) NOT NULL UNIQUE,
    phone_number VARCHAR2(20) NOT NULL
);

CREATE TABLE EventActivities (
    activity_id NUMBER PRIMARY KEY,
    activity_ title VARCHAR2(255),
    startTime INTERVAL DAY(1) TO SECOND(0),
    endTime INTERVAL DAY(1) TO SECOND(0),
    date DATE,
    event_id NUMBER,
    FOREIGN KEY (event_id) REFERENCES Events(event_id)
);

CREATE TABLE Tasks (
    task_id NUMBER PRIMARY KEY,
    task_title VARCHAR2(255),
    task_description VARCHAR2(255),
    assigned_to_vendors NUMBER,
    assigned_to_staff NUMBER,
    deadline DATE,
    task_status VARCHAR2(255),
    cost NUMBER,
    payment_status VARCHAR2(50),
    event_id NUMBER,
    FOREIGN KEY (event_id) REFERENCES Events(event_id),
    FOREIGN KEY (assigned_to_staff) REFERENCES Staff(staff_id),
    FOREIGN KEY (assigned_to_vendors) REFERENCES vendors(vendor_id)
);

CREATE SEQUENCE SEQ_TASK_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_ACTIVITY_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_STAFF_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_ORGANIZER_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;


CREATE SEQUENCE SEQ_EVENT_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_VENUE_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_PARTICIPANT_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;


CREATE SEQUENCE SEQ_VENDOR_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;

CREATE SEQUENCE SEQ_PAYMENT_ID
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 1
NOCYCLE
NOCACHE
NOORDER;
